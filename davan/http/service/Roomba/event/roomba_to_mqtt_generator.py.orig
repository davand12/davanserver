#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import asyncio
from roomba.roomba980.roomba import Roomba

import paho.mqtt.client as mqtt
import time
import json
import logging

def generate_mqtt_events():
   #Uncomment the following two lines to see logging output
   logging.basicConfig(level=logging.INFO, 
      format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')

   #put your own values here
   broker = 'localhost'       # ip of mqtt broker
   user = None                # mqtt username
   password = None            # mqtt password
   address = "192.168.50.155" # Ip of roomba

   loop = asyncio.get_event_loop()

   myroomba = Roomba(address)  #minnimum required to connect on Linux Debian system, will read connection from config file

   myroomba.enable_map(enable=True, mapSize="(800,1650,-300,-50,2,0)", mapPath="./", iconPath="./res")  #enable live maps, class default is no maps
   if broker is not None:
      myroomba.setup_mqtt_client(broker, 1883, user, password, '/roomba/feedback') #if you want to publish Roomba data to your own mqtt broker (default is not to) if you have more than one roomba, and assign a roombaName, it is addded to this topic (ie /roomba/feedback/roombaName)
   myroomba.connect()

   print("<CMTRL C> to exit")
   print("Subscribe to /roomba/feedback/# to see published data")

   try:
     loop.run_forever()

   except (KeyboardInterrupt, SystemExit):
      print("System exit Received - Exiting program")
      myroomba.disconnect()


if __name__ == '__main__':
   generate_mqtt_events()